{
	"name": "pl_creating_Gold_layer_view",
	"properties": {
		"activities": [
			{
				"name": "Delete_presentation_folder",
				"description": "In order to make the pipeline runnable we need to delete the data from the presentation folder.",
				"type": "Delete",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "delete_presentation_layer_files",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "disctinct_year_month_pair",
				"description": "The distinct value pairs of year and month are required so that data could be saved in partitions.",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Delete_presentation_folder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "serverless_sql_pool_link",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "use nyc_warehouse;\n\nselect distinct year_of_trip, month_of_trip\nfrom \nsilver.trip_data_vw"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "iterator_to_create_credit_vs_cash_partitions",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "disctinct_year_month_pair",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('disctinct_year_month_pair').output.resultSets[0].Rows",
						"type": "Expression"
					},
					"batchCount": 5,
					"activities": [
						{
							"name": "credit_vs_cash_procedure_execution",
							"description": "for each distinct value pair of month and year the procedure gold.external_table_credit_vs_cash will be executed.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[gold].[sp_external_table_credit_vs_cash]",
								"storedProcedureParameters": {
									"month": {
										"value": {
											"value": "@item().month_of_trip",
											"type": "Expression"
										},
										"type": "String"
									},
									"year": {
										"value": {
											"value": "@item().year_of_trip",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "serverless_sql_pool_link",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "iterator_to_create_taxi_demand_partitions_copy1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "disctinct_year_month_pair",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('disctinct_year_month_pair').output.resultSets[0].Rows",
						"type": "Expression"
					},
					"batchCount": 5,
					"activities": [
						{
							"name": "taxi_demand_procedure_execution",
							"description": "for each distinct value pair of month and year the procedure gold.external_table_taxi_demand will be executed.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[gold].[sp_external_table_taxi_demand]",
								"storedProcedureParameters": {
									"month": {
										"value": {
											"value": "@item().month_of_trip",
											"type": "Expression"
										},
										"type": "String"
									},
									"year": {
										"value": {
											"value": "@item().year_of_trip",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "serverless_sql_pool_link",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "gold_layer_views_creation",
				"description": "All the partitions are stored in the presentation layer so a view can be formed by using openrowset in order to access the data.",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "iterator_to_create_credit_vs_cash_partitions",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "iterator_to_create_taxi_demand_partitions_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "serverless_sql_pool_link",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "use nyc_warehouse;\n\nif object_id('gold.credit_vs_cash_vw') is not null drop view gold.credit_vs_cash_vw;\n\nif object_id('gold.taxi_demand_vw') is not null drop view gold.taxi_demand_vw;"
						},
						{
							"type": "NonQuery",
							"text": "create view gold.credit_vs_cash_vw\n\nAS\n\nselect * from\n\nOPENROWSET(\n            bulk 'presentation/credit_vs_cash/**',\n\n            data_source= 'nyc_taxi_ds1',\n\n            FORMAT='parquet'\n\n        ) as result\n;"
						},
						{
							"type": "NonQuery",
							"text": "create view gold.taxi_demand_vw\n\nAS\n\nselect * from \n\nopenrowset\n\n    (\n        bulk 'presentation/taxi_demand/**',\n        data_source = 'nyc_taxi_ds1',\n        format = 'parquet'\n    ) as result;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-06-12T08:17:26Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}